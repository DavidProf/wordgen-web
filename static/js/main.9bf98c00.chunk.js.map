{"version":3,"sources":["logo512.png","App.tsx","index.tsx"],"names":["module","exports","toast","configure","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","limit","App","React","useState","randomWords","setRandomWords","allowAdjective","setAllowAdjective","allowAdverb","setAllowAdverb","allowNoun","setAllowNoun","allowVerb","setAllowVerb","allowCompound","setAllowCompound","setRandomWord","allWords","push","words","adjective","adverb","noun","verb","filtered","filter","w","test","length","index","Math","round","random","useEffect","className","src","logo","alt","title","onClick","id","elementToCopy","document","createElement","innerText","body","appendChild","select","execCommand","remove","dark","aria-pressed","rel","target","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,qC,4NCQ3CC,IAAMC,UAAU,CACZC,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,MAAO,IAqGIC,MAlGf,WAAgB,IAAD,EAC2BC,IAAMC,SAAS,IAD1C,mBACJC,EADI,KACSC,EADT,OAEiCH,IAAMC,UAAS,GAFhD,mBAEJG,EAFI,KAEYC,EAFZ,OAG2BL,IAAMC,UAAS,GAH1C,mBAGJK,EAHI,KAGSC,EAHT,OAIuBP,IAAMC,UAAS,GAJtC,mBAIJO,EAJI,KAIOC,EAJP,OAKuBT,IAAMC,UAAS,GALtC,mBAKJS,EALI,KAKOC,EALP,OAM+BX,IAAMC,UAAS,GAN9C,mBAMJW,EANI,KAMWC,EANX,KAQX,SAASC,IACL,IAAMC,EAAW,GAUjB,GATIX,GACAW,EAASC,KAAT,MAAAD,EAAQ,YAASE,EAAMC,YACvBZ,GACAS,EAASC,KAAT,MAAAD,EAAQ,YAASE,EAAME,SACvBX,GACAO,EAASC,KAAT,MAAAD,EAAQ,YAASE,EAAMG,OACvBV,GACAK,EAASC,KAAT,MAAAD,EAAQ,YAASE,EAAMI,QAEtBT,EAAe,CAChB,IAAMU,EAAWP,EAASQ,QAAO,SAAAC,GAAC,OAAK,MAAMC,KAAKD,MAClDT,EAASW,OAAS,EAClBX,EAASC,KAAT,MAAAD,EAAQ,YAASO,IAGrB,IAAIK,EAAQC,KAAKC,MAAMD,KAAKE,SAAWf,EAASW,OAAS,GAEzDvB,EAAeY,EAASY,IAM5B,OAFA3B,IAAM+B,WAAU,WAAQjB,MAAmB,IAGvC,yBAAKkB,UAAU,OACX,yBAAKA,UAAU,QACX,yBAAKC,IAAKC,IAAMC,IAAI,iBAAiBC,MAAM,mBAC3C,4BACIA,MAAM,+BACNJ,UAAU,WACVK,QAASvB,GAHb,iBAMA,uBACIwB,GAAG,cACHD,QAAS,WACL,IAAME,EAAgBC,SAASC,cAAc,YAC7CF,EAAcG,UAAYxC,EAC1BsC,SAASG,KAAKC,YAAYL,GAC1BA,EAAcM,SACdL,SAASM,YAAY,QACrBP,EAAcQ,SACdzD,IAAM0D,KAAK,YAEd9C,GAGL,yBAAK8B,UAAU,WACX,4BACII,MAAM,4BACNa,eAAc7C,EACdiC,QAAS,kBAAMhC,GAAmBD,KAHtC,aAMA,4BACIgC,MAAM,yBACNa,eAAc3C,EACd+B,QAAS,kBAAM9B,GAAgBD,KAHnC,UAMA,4BACI8B,MAAM,uBACNa,eAAczC,EACd6B,QAAS,kBAAM5B,GAAcD,KAHjC,QAMA,4BACI4B,MAAM,uBACNa,eAAcvC,EACd2B,QAAS,kBAAM1B,GAAcD,KAHjC,QAMA,4BACI0B,MAAM,gCACNa,eAAcrC,EACdyB,QAAS,kBAAMxB,GAAkBD,KAHrC,cAQR,uDAEI,uBAAGsC,IAAI,sBAAsBC,OAAO,SAASC,KAAK,4CAAlD,aCzGhBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFf,SAASgB,eAAe,U","file":"static/js/main.9bf98c00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo512.5f046ff8.png\";","import React from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport words from './words.json';\nimport logo from './logo512.png';\n\n\ntoast.configure({\n    position: \"bottom-center\",\n    autoClose: 2000,\n    hideProgressBar: true,\n    closeOnClick: false,\n    pauseOnHover: true,\n    draggable: true,\n    limit: 1\n});\n\nfunction App() {\n    const [randomWords, setRandomWords] = React.useState('');\n    const [allowAdjective, setAllowAdjective] = React.useState(true);\n    const [allowAdverb, setAllowAdverb] = React.useState(true);\n    const [allowNoun, setAllowNoun] = React.useState(true);\n    const [allowVerb, setAllowVerb] = React.useState(true);\n    const [allowCompound, setAllowCompound] = React.useState(false);\n\n    function setRandomWord() {\n        const allWords = [];\n        if (allowAdjective)\n            allWords.push(...words.adjective);\n        if (allowAdverb)\n            allWords.push(...words.adverb);\n        if (allowNoun)\n            allWords.push(...words.noun);\n        if (allowVerb)\n            allWords.push(...words.verb);\n\n        if (!allowCompound) {\n            const filtered = allWords.filter(w => !/\\s/g.test(w));\n            allWords.length = 0;\n            allWords.push(...filtered);\n        }\n\n        let index = Math.round(Math.random() * allWords.length - 1);\n\n        setRandomWords(allWords[index]);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    React.useEffect(() => { setRandomWord() }, []);\n\n    return (\n        <div className=\"App\">\n            <div className=\"main\">\n                <img src={logo} alt=\"Word generator\" title=\"Word generator\" />\n                <button\n                    title=\"click to generate a new word\"\n                    className=\"generate\"\n                    onClick={setRandomWord}>\n                    generate word\n                </button>\n                <p\n                    id=\"random_word\"\n                    onClick={() => {\n                        const elementToCopy = document.createElement('textarea');\n                        elementToCopy.innerText = randomWords;\n                        document.body.appendChild(elementToCopy);\n                        elementToCopy.select();\n                        document.execCommand('copy');\n                        elementToCopy.remove();\n                        toast.dark('Copied');\n                    }}>\n                    {randomWords}\n                </p>\n\n                <div className=\"options\">\n                    <button\n                        title=\"enable/disable adjectives\"\n                        aria-pressed={allowAdjective}\n                        onClick={() => setAllowAdjective(!allowAdjective)}>\n                        adjective\n                    </button>\n                    <button\n                        title=\"enable/disable adverbs\"\n                        aria-pressed={allowAdverb}\n                        onClick={() => setAllowAdverb(!allowAdverb)}>\n                        adverb\n                    </button>\n                    <button\n                        title=\"enable/disable nouns\"\n                        aria-pressed={allowNoun}\n                        onClick={() => setAllowNoun(!allowNoun)}>\n                        noun\n                    </button>\n                    <button\n                        title=\"enable/disable verbs\"\n                        aria-pressed={allowVerb}\n                        onClick={() => setAllowVerb(!allowVerb)}>\n                        verb\n                    </button>\n                    <button\n                        title=\"enable/disable words compound\"\n                        aria-pressed={allowCompound}\n                        onClick={() => setAllowCompound(!allowCompound)}>\n                        compound\n                    </button>\n                </div>\n            </div>\n            <footer>\n                See the code on &nbsp;\n                <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/DavidProf/wordgen-web\">GitHub</a>\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}